% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/linearGenomePlot.R
\name{linearGenomePlot}
\alias{linearGenomePlot}
\title{Draw a linear genome plot}
\usage{
linearGenomePlot(
  readDepthPer30kbBin,
  readDepthBinSize = 30000,
  sampleId = NULL,
  alternateId = NULL,
  segmentation = NULL,
  allelicSegments = NULL,
  noDelGainCalls = FALSE,
  gainColor = "blue",
  lossColor = "red",
  zebraStrips = FALSE,
  yAxisLimits = NULL,
  plotCex = 1.3,
  ...
)
}
\arguments{
\item{readDepthPer30kbBin}{list with two equal length arrays:
\itemize{
\item \code{readDepthArray} read depth for 30 kb bins, normalized for GC content and other artifacts
\item \code{goodWindowArray} linear genome position of each window (bin), masked windows have been removed
}}

\item{readDepthBinSize}{size of each window (bin) default is 30 kb}

\item{sampleId}{sample Identifier}

\item{alternateId}{optional secondary sample identifier}

\item{segmentation}{identified regions of the genome with constant read depth. Data.frame with required columns:
chr, start, end, rd; optional: cnvState (1=loss, 2=normal, 3=gain) for color coded linear linear genome plot}

\item{allelicSegments}{segmentData from \code{calculatePloidy} then augmented in \code{plotStarsInTheClouds} with major_copy_number and minor_copy_number}

\item{noDelGainCalls}{do not color code deletions and gains in genome plot}

\item{gainColor}{color to use for gains in linear genome plot, default is blue}

\item{lossColor}{color to use for losses in linear genome plot, default is red}

\item{zebraStrips}{option to have alternating gray/white background for chromosome delineation}

\item{yAxisLimits}{option to set y axis to user specified limits, e.g. to align with the constellation plot}

\item{plotCex}{factor to alter the cex for plots}

\item{...}{Parameters passed onto the actual plot command}
}
\description{
Displays the read-depth array in a linear fashion. Can report CNV as all gray or use color calls.
If sampleId is provided, title annotations will be added.
}
\examples{
sampleId='TCGA-14-1402-02A_ds'
inputDir <- system.file('extdata', package = "BACDAC")
segmentationFile <- file.path(inputDir, paste0(sampleId, '_segmentation.csv'))
segmentation <- read.csv(segmentationFile, comment.char = '#') # chr, start, end, rd per
segmentation <- checkSegmentation(segmentation)
thirtyKbFile=file.path(inputDir, paste0(sampleId,'_','readDepthPer30kbBin.Rds'))
readDepthPer30kbBin = readRDS(file=thirtyKbFile )

op <- par(mfrow=c(3,1),mai=c(.25,0.5, 0.3,0.25), mgp=c(2, .5, 0))
# default copy number color coding
linearGenomePlot(readDepthPer30kbBin=readDepthPer30kbBin,sampleId=sampleId,
    segmentation=segmentation)
# example with no copy number color coding
linearGenomePlot(readDepthPer30kbBin=readDepthPer30kbBin,sampleId=sampleId,
    noDelGainCalls=TRUE,segmentation=segmentation)
# alternate copy number color coding, no sample id label
linearGenomePlot(readDepthPer30kbBin=readDepthPer30kbBin,sampleId=NULL,
    segmentation=segmentation, gainColor = 'red', lossColor= 'blue' )

}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runBACDAC.R
\name{runBACDAC}
\alias{runBACDAC}
\title{run all the steps in BACDAC, will output pdfs, intermediate and allele specific copy number data if outputDir is provided}
\usage{
runBACDAC(
  sampleId,
  alternateId,
  inputDir,
  outputDir,
  noPdf = FALSE,
  readDepthPer30kbBin,
  readDepthPer100kbBin,
  segmentation,
  segmentationBinSize,
  hsNormMat,
  testVals,
  gainColor = "blue",
  lossColor = "red",
  dPeaksCutoff = 0.01,
  penaltyCoefForAddingGrids = 0.49,
  minGridHeight = 0.2,
  minPeriodManual = -1,
  maxPeriodManual = -1,
  forceFirstDigPeakCopyNum = -1,
  grabDataPercentManual = -1,
  origMaxPercentCutoffManual = -1,
  minReasonableSegmentSize = 5500000,
  heterozygosityScoreThreshold = 0.98,
  allowedTumorPercent = 106
)
}
\arguments{
\item{sampleId}{sample Identifier}

\item{alternateId}{optional secondary sample identifier}

\item{inputDir}{full path to directory with input files}

\item{outputDir}{full path to directory to output all files and intermediate objects created}

\item{noPdf}{if present (TRUE), pdf files will not be generated, instead plots are drawn on default device}

\item{readDepthPer30kbBin}{list with two equal length arrays:
\itemize{
\item \code{readDepthArray} read depth for 30 kb bins, normalized for GC content and other artifacts
\item \code{goodWindowArray} linear genome position of each window (bin), masked windows have been removed
}}

\item{readDepthPer100kbBin}{list with two equal length arrays:
\itemize{
\item \code{readDepthArray} read depth for 100 kb bins, normalized for GC content and other sequencing artifacts
\item \code{goodWindowArray} linear genome position of each window (bin) (masked windows have been removed)
}}

\item{segmentation}{identified regions of the genome with constant read depth. Data.frame with required columns:
chr, start, end, rd; optional: cnvState (1=loss, 2=normal, 3=gain) for color coded linear linear genome plot}

\item{segmentationBinSize}{bin size used for the read depth in the segmentation data}

\item{hsNormMat}{heterozygosity score mask, used to find genomic positions where the heterozgosity score is atypically low.
\itemize{
\item rows: hetScores for each 30 kb segment of the genome, 1-22, X and a part of Y.
\item columns: one column for each of the 23 normal samples
}}

\item{testVals}{pre-built array to assist finding each possible heterozygosity value for each copy number level}

\item{gainColor}{color for gains in the linear genome plot, default is blue}

\item{lossColor}{color for losses in the linear genome plot, default is red}

\item{dPeaksCutoff}{dPeaksCutoff min grid height for a peak to be considered a digital peak}

\item{penaltyCoefForAddingGrids}{penalty for adding additional peaks to the digital peak alignment}

\item{minGridHeight}{minimum value that can be assigned to the gridHeights}

\item{minPeriodManual}{user provided \code{minPeriod} for digital grid, default is -1 to indicate no user input}

\item{maxPeriodManual}{user provided \code{maxPeriod} for digital grid, default is -1 to indicate no user input}

\item{forceFirstDigPeakCopyNum}{value to force copy number of first digital peak, use only when ploidy calculation is wrong}

\item{grabDataPercentManual}{portion of main peak data to grab, other peaks will be scaled based on read depth (x location),
default is -1, and value will be base on width of the main (dominate) read depth peak}

\item{origMaxPercentCutoffManual}{peaks smaller than this portion of the max peak are not considered; set to -1 to use default value}

\item{minReasonableSegmentSize}{initial smallest segment size to include in ploidy test segments (segmentData); want to
keep as large as possible to avoid 0N segments, but will decrease size if not enough segments are found}

\item{heterozygosityScoreThreshold}{peaks with a hetScore mode above this value are considered heterozygous, typically 0.98,
but may vary depending on NGS library quality and preparation}

\item{allowedTumorPercent}{allow some tolerance to go over 100 especially for PDXs which will very near 100}
}
\description{
run all the steps in BACDAC, will output pdfs, intermediate and allele specific copy number data if outputDir is provided
}
\examples{
\dontrun{
library(BACDAC)
library(logging)
basicConfig("DEBUG")
mySampleId='TCGA-14-1402-02A_ds'; myAlternateId=66301
myOutputDir <- tempdir()
noPdf=TRUE                          # TRUE= print to screen, FALSE=print to pdf (i e. outputDir/dev/ploidy)

# inputDir is the path to the load package data
myInputDir <- system.file('extdata', package = "BACDAC")

# read depth data
thirtyKbFile=file.path(myInputDir, paste0(mySampleId,'_','readDepthPer30kbBin.Rds'))
readDepthPer30kbBin = readRDS(file=thirtyKbFile )
hundredKbFile=file.path(myInputDir, paste0(mySampleId,'_','readDepthPer100kbBin.Rds'))
readDepthPer100kbBin = readRDS(file=hundredKbFile )

# segmentation data
segmentationFile <- file.path(myInputDir, paste0(mySampleId, '_segmentation.csv'))
mySegmentation <- read.csv(segmentationFile, comment.char = '#') # chr, start, end, rd per
mySegmentation <- checkSegmentation(mySegmentation)

mySegmentationBinSize=30000
## load two reference files
hsNormMat <- "../referenceFiles/hetScoreNormMat.Rds"
myTestVals <- "../referenceFiles/testVals.Rds"

runBACDAC(sampleId=mySampleId,
          alternateId=myAlternateId,
          outputDir=myOutputDir,
          inputDir=myInputDir,
          noPdf,
          readDepthPer30kbBin, readDepthPer100kbBin,
          segmentation=mySegmentation,
          segmentationBinSize=mySegmentationBinSize,
          hsNormMat=myHsNormMat,
          testVals=myTestVals)
}
}
